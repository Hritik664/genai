import torch
from torchmetrics.functional import cosine_similarity

# Function to track inference metrics (Cosine Similarity in this case)
def track_inference_metrics(generated_data, reference_data):
    """
    Computes the cosine similarity between generated data and reference data.
    
    Args:
    - generated_data (torch.Tensor): The data generated by the model.
    - reference_data (torch.Tensor): The actual data to compare against.
    
    Returns:
    - float: Mean cosine similarity value between the two datasets.
    """
    # Ensure the data is in the correct format (flattened if necessary)
    generated_data = generated_data.flatten(start_dim=1)
    reference_data = reference_data.flatten(start_dim=1)
    
    # Compute and return the cosine similarity between the generated and reference data
    return cosine_similarity(generated_data, reference_data).mean().item()

if __name__ == "__main__":
    # Example: Dummy tensors to simulate generated data and reference data
    generated_data = torch.randn(10, 141)  # Example generated data (batch of 10, 141 features)
    reference_data = torch.randn(10, 141)  # Example reference data (batch of 10, 141 features)
    
    # Track and print the similarity score
    similarity_score = track_inference_metrics(generated_data, reference_data)
    print(f"Cosine Similarity Score: {similarity_score}")
